# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '9e0ba679-c5f7-45c5-b469-1649c1a73bfd'
  imageRepository: 'bike'
  containerRegistry: 'rajibacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'rajibacr88578e08-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'SPRAJIBBikeSharingSampleApp-1527.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'Bikes/charts/bikes'
              artifact: 'charts'
              publishLocation: 'pipeline'

          - task: Kubernetes@1
            displayName: 'Add devspace label'
            inputs:
              kubernetesServiceEndpoint: BikeSharingSampleApp
              command: label
              arguments: '--overwrite ns $(system.pullRequest.sourceBranch) azds.io/space=true'
              checkLatest: true
          - task: KubernetesManifest@0
            inputs:
              action: 'bake'
              namespace: 'Namespace'
              helmChart: '$(System.ArtifactsDirectory)/charts'
              overrides: |
                image.tag:$(Build.BuildId)
                                buildID:"1"

          